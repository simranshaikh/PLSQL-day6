PLSQL day6 assignments:

1)

•	Create a user defined data type named “MARKS_TYPE” having the following subfields

Column	Data type and size
Subject	VARCHAR 2 (25)
midTermMarks	NUMBER (3)
annualMarks	NUMBER(3)


•	Create an object table with name “MYMARKS” having a single column of type MARKS_TYPE.
•	Insert any 3 records in the table with relevant data
•	Fire an appropriate SELECT command to get midTermMarks and annualMarks for all records for the given subject


===>

create or replace type marks_type as object
(subject varchar2(25),midtermmarks number(3),annualmarks number(3));
---

create table mymarks(marks marks_type);

insert into mymarks values(marks_type('OSS',75,100));

insert into mymarks values(marks_type('OLA',80,100));

insert into mymarks values(marks_type('SE',90,100));

select p.marks.midtermmarks from mymarks p where p.marks.subject like 'OSS';
select p.marks.annualmarks from mymarks p where p.marks.subject like 'OSS';



2)

•	Create table “students” having the following design

Column	Data type and size	Constraint
studentName	VARCHAR 2 (25)	
rollNo	NUMBER (3)	Primary Key
Score	MARKS_TYPE	

•	Insert any 3 relevant records in the table.
•	Fire an appropriate SELECT query to get the score of a student with the given rollNO
•	Fire an appropriate command to increase the annualMarks of the student with given rollNo by five marks



create or replace type marks_type as object
(subject varchar2(25),midtermmarks number(3),annualmarks number(3));
-----

create table students(studentname varchar2(25),rollno number(3) primary key,score marks_type);

-----
insert into students values('simran',1,marks_type('OSS',80,100));

insert into students values('rehman',2,marks_type('FPL',90,99));

insert into students values('alina',3,marks_type('TOC',88,95));

-----
select p.score.midtermmarks,p.score.annualmarks from students p where rollno=1;

-----
update students p set p.score.annualmarks=p.score.annualmarks+5 where rollno=1;


---


3)


•	Create user defined data type named “ICECREAM_TYPE” with the following data members

Column	Data type and size
flovorNo	NUMBER(2)
Fname	VARCHAR(10)
Cost	NUMBER(3)
Hastopping	CHAR(1)   
Can be Y or N

•	Create table named “menu” with the following design and insert five records into it.

Column	Data type and size	Constraint
MenuNo	NUMBER(2)	Primary key
mainCourse	VARCHAR2(15)	Not Null
Desert	ICECREAM_TYPE	
Colddrink	CHAR(6)	


•	Retrieve cost and name of an icecream from menu by specifying its flavor number.
•	Update cost and maincourse column  from menu by specifying its MenuNo.

create or replace type icecream_type as object
(flavourno number(2), fname varchar2(10), cost number(3), hastopping char(1));
create table menu(menuno number(2) primary key,maincourse varchar2(15) not null,desert icecream_type,colddrink char(6));

insert into menu values(1,'rice',icecream_type(11,'chocolate',80,'y'),'fanta');


insert into menu values(2,'burger',icecream_type(12,'mango',100,'y'),'slice');

insert into menu values(3,'fries',icecream_type(13,'almond',150,'y'),'frooti');


select p.desert.cost from menu p where p.desert.fname like 'mango';

update menu p set p.desert.cost=200, maincourse='noodles' where menuno=1;

=========================================================
collection 4


Create an object type VEHICLE_TYPE to record the vehicle details owned by an employee.  VEHICLE_TYPE  has the following design :


Vehicle_No	VARCHAR2(12)
Vehicle_Type	CHAR(1)  
(T for two wheeler and F for four wheeler)
Monthly_Expense	NUMBER(7)


•	Create a varray named VEHICLE_ARR of VEHICLE_TYPE that can store max of 3 vehicle details for each employee.

•	Create a table EMP_VARRAY with the following design :

Emp_No	NUMBER (4)	PRIMARY KEY
Emp_Name	VARCHAR2 (30)	
vehicleList	VEHICLE_ARR	

•	Add two relevant records in the table with only one vehicleList member for each emp_no.

•	Write a procedure named ADD_VEHICLE_DETAILS that accepts Emp_no and vehicle details and adds the vehicle details for the corresponding Emp_no in the EMP_VARRAY table. The procedure should handle all the probable errors by displaying the appropriate error messages on the screen.

•	Give a call to ADD_VEHICLE_DETAILS from an anonymous PL/SQL block



create or replace type vehicle_type as object(vehicle_no varchar2(20),vehicle_type char(1),monthly_expense number(7))


create type vehicle_arr as varray of vehicle_type;

create table emp_varray (emp_no number(4) primary key,emp_name varchar2(30),vehiclelist vehicle_arr);




==================================================================



collection 2


A.	Create an object type CUST_TAB with below attributes
-	Cust_id
-	Cust_Name
-	Plan_Name
B.	Create suitable collection type CUST_DETAILS of CUST_TAB type.
One customer may have many plans .

C.	Create a table Cust_Tab_details as follows :

Columname                            	Constraint  	Datatype
Srno                          	Primary Key            	  Number(10)
Cust_Info                      	 	             CUST_DETAILS
Cust_number	 	                                Number(10)
		                             
D.	 Insert 2 rows in the above table 
Atleast 2 CUST_TAB entries per srno.
E.	Write the select query to display Sr.no and Cust_info from cust_tab_detail table
Note : Write SQL select command not the procedure.
				


create or replace type cust_tab as object(cust_id number,cust_name varchar2(20),plan_name varchar2(20));

-----

create type cust_details as varray(5) of cust_tab;

-----

create table cust_tab1(srno number(10) primary key, cust_info cust_details, cust_number number(10));

-----

insert into cust_tab1 values(101,cust_details(cust_tab(1,'aaa','plan1'),cust_tab(2,'bbb','plan2')),111)

insert into cust_tab1 values(102,cust_details(cust_tab(3,'ccc','plan3'),cust_tab(4,'ddd','plan4')),112);

insert into cust_tab1 values(103,cust_details(cust_tab(5,'eee','plan5'),cust_tab(6,'fff','plan6')),111);

-----

declare
var cust_details;
cursor c1 is select * from cust_tab1;
begin
for y in c1
loop
select cust_info into var from cust_tab1 where srno=y.srno;
for x in 1..var.count
loop
dbms_output.put_line('cust id : '||var(x).cust_id||' cust name : '||var(x).cust_name||' plan name : '||var(x).plan_name);
end loop;
end loop;
end;
/


========================================================================


Practice 5

A.	create an object named paper_obj with following attributes:
paperid
     paperName
     publishDate

B.	Create suitable collection type paper_details of paper_obj type.
C.	Create a table Author_Tab as follows :

Columname                            	Constraint  	Datatype
Authorid                        	Primary Key            	  Number(10)
AuthorName                      	 	             Varchar2(20)
Papers	 	                                paper_details
		                             
D.	 Insert 2 rows in the above table 
Atleast 2 paper_obj entries per author.

create or replace type paper_obj as object(paperid number(10),papername varchar2(20),publishdate date)

create type paper_details as varray(5) of paper_obj;

create table author_tab(authorid  number primary key,authorname varchar2(20), papers paper_details);


insert into author_tab values(101,'simran',paper_details(paper_obj(1,'TOI','01-jan-2016'),paper_obj(2,'IE','02-feb-2017')));



insert into author_tab values(102,'rehman',paper_details(paper_obj(3,'BT','10-jan-2016'),paper_obj(4,'QW','02-mar-2017')));











insert into cust_tab1 values(101,cust_details(cust_tab(1,'aaa','plan1'),cust_tab(2,'bbb','plan2')),111)



